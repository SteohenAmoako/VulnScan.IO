'use server';
/**
 * @fileOverview Summarizes a vulnerability scan report into key takeaways.
 *
 * - summarizeVulnerabilityReport - A function that handles the summarization process.
 * - SummarizeVulnerabilityReportInput - The input type for the summarizeVulnerabilityReport function.
 * - SummarizeVulnerabilityReportOutput - The return type for the summarizeVulnerabilityReport function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SummarizeVulnerabilityReportInputSchema = z.object({
  report: z.string().describe('The vulnerability scan report to summarize.'),
});
export type SummarizeVulnerabilityReportInput = z.infer<typeof SummarizeVulnerabilityReportInputSchema>;

const SummarizeVulnerabilityReportOutputSchema = z.object({
  summary: z.string().describe('A concise summary of the vulnerability scan report, including risk levels and potential impacts.'),
});
export type SummarizeVulnerabilityReportOutput = z.infer<typeof SummarizeVulnerabilityReportOutputSchema>;

export async function summarizeVulnerabilityReport(input: SummarizeVulnerabilityReportInput): Promise<SummarizeVulnerabilityReportOutput> {
  return summarizeVulnerabilityReportFlow(input);
}

const prompt = ai.definePrompt({
  name: 'summarizeVulnerabilityReportPrompt',
  input: {schema: SummarizeVulnerabilityReportInputSchema},
  output: {schema: SummarizeVulnerabilityReportOutputSchema},
  prompt: `You are an expert security analyst. Please summarize the following vulnerability scan report into key takeaways, including risk levels and potential impacts, so that a non-technical user can quickly understand the findings:\n\nReport:\n{{{report}}}`,
});

const summarizeVulnerabilityReportFlow = ai.defineFlow(
  {
    name: 'summarizeVulnerabilityReportFlow',
    inputSchema: SummarizeVulnerabilityReportInputSchema,
    outputSchema: SummarizeVulnerabilityReportOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
